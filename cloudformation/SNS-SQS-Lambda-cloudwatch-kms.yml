service: serverless-sns-sqs

frameworkVersion: '2'
configValidationMode: warn

plugins:
  - serverless-deployment-bucket
  - serverless-offline
  
provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage}
  region: us-east-1
  stackName: ${self:service}-${opt:stage}
  deploymentBucket:
    name: cloud-projects-sls-deployments-${opt:stage}
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - "sns:*"
      Resource:
        - "arn:aws:sns:us-east-1:account-id:${opt:stage}-MyFirstSNSTopic"

functions:
  PublisherFunction:
    name: publisher-lambda-${opt:stage}
    handler: handler.publisherLambda
    memorySize: 256
    timeout: 10
    events:
      - httpApi: 'POST /orders'

  SubscriberFunction:
    name: subscriber-lambda-${opt:stage}
    handler: handler.subscriberLambda
    memorySize: 256
    timeout: 10
    events:
      - sns:
          arn: !Ref MySNSTopic
          topicName: ${opt:stage}-MyFirstSNSTopic

resources:
  Resources:
    MySNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "${opt:stage}-MyFirstSNSTopic"    
        Subscription:
          - Endpoint:
              Fn::GetAtt:
                - "MyFirstQueue"
                - "Arn"
            Protocol: "sqs"  
    MyFirstQueue:
      Type: AWS::SQS::Queue
      Properties: 
        DelaySeconds: 0
        MaximumMessageSize: 1024
        MessageRetentionPeriod: 60
        QueueName: my-first-queue-${opt:stage}
        VisibilityTimeout: 180
        KmsMasterKeyId: AQICAHjjXSrJ+6BdIq2iizFHM3iA6neQyKPzY2LMrZvM5TPZ+wF5i5Gd22I4FM7ACFesiBdCAAAAbzBtBgkqhkiG9w0BBwagYDBeAgEAMFkGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMvwpzi3PPhtkH4x/AAgEQgCzgqgfrdn7sjmGJhA9fQVjFpQuKf2HmpTnD0HjHt807SZth5JmY0kpR4P51Xg==
    
    SNSTopicQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties: 
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "allow-sns-messages"
              Effect: Allow
              Principal: 
                Service: "sns.amazonaws.com"
              Resource: !GetAtt 
                - "MyFirstQueue"
                - "Arn"
              Action: 
                - "sqs:SendMessage"
              Condition:
                ArnEquals:
                  "aws:SourceArn": "arn:aws:sns:us-east-1:account-id:${opt:stage}-MyFirstSNSTopic"
        Queues:
          - Ref: "MyFirstQueue"